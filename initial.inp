##------------------------------------------------------------------------------
##/** SYSTEM CONFIGURATION **/
##------------------------------------------------------------------------------
typeB 0
typeS 5

## NOTE: (typeB,typeS) Exmaple
##------------------------------------------------------
## (0,0): real- or metal-unit systems
## (0,5): LJ-unit polymers
## (5,6): LJ-unit small molecules
##------------------------------------------------------

computeCluster atom ##default: atom

userName      hungj2
masterFolder  AUTOWORK

## NOTE: Important Folders
##------------------------------------------------------
## 'userName' is your account folder in /home
## 'masterFolder' must be created in 'userName'
##------------------------------------------------------

simType       LJ
year          2022
usicID        atom
nameString    KG20  ## optional for customization

n_trial 2

## NOTE: Naming Convention
##------------------------------------------------------
## usic = simType + usicID
## Filename: ${usic}_${trl}_${namestring}_T${Temp}
##------------------------------------------------------

systemUnit   lj   ## options: real,lj,metal
startTemp    1500.0 ## this is highest start T
crossTemp    1300.0 ## above 'crossTemp', T spacing is hTres; below, lTres
hTres        50.0
lTres        25.0

#n_kuhnsegs  12  ## this has be set before n_equ_blocks (default value is 1)

n_equ_blocks 10 10 5 5 5 5 
n_prd_blocks 10 10 5 5 5 5

logtau_targets 0.0 0.5 1.0 1.5 2.0 3.0
n_regime_temps 4 4 4 4 4 4
ts_regime      0.005 0.005 0.005 0.005 0.005 0.005

## NOTE: Time Unit
##------------------------------------------------------
## real:        fs
## lj & metal:  ps
##------------------------------------------------------

regime_beg  0  ## specify the start regime (corresponding to 'logtau_targets')
regime_end  5  ## specify the final regime (same as above)



##------------------------------------------------------------------------------
##/** CUSTOM COMMANDS **/
##------------------------------------------------------------------------------
## ACTION KEYWORDS: make,set,run,define,next,print,show
## STOP COMMAMD:    exit
##------------------------------------------------------------------------------
make filesystem        ## make the folder structure
make scripts prepared  ## arg: prepared (copy scripts from the 'scripts' folder)

#make lmpdata default   ## make data files of lammps by default StructureClass
#make lmpdata moltemplate dop 30 merSet 1 S002 30 copolymerType random tacticity atactic n_total_atoms 15000

##------------------------------------------------------
## << simulation setters >> ##
##------------------------------------------------------
set is_GPU         no
#set compute_node  1-10
#set n_steps gen   1e+5  ## default: 1e+6
#set quench_rate   1e+3
#set which_GPU     1      ## only available when n_trial = 1
#set n_cores_run   gen 2
#set n_cores_run   qch 2
#set n_cores_run   equ 2
#set n_cores_run   res 2
#set n_cores_run   prd 2

##------------------------------------------------------
## << analysis (amdat) setters >> ##
##------------------------------------------------------
set analysispart        all
set relaxation_target   isfs  ## arg: isfs,baf
set is_changeAtomType   no
set c_amdat             1
#set is_mbodies         no
#set is_monoStruct      yes
#set analysispart_bin   0_0_0
#set segmode            mode12
#set is_cusstrfolder    yes

set is_makeNewAnanlysisFolder no
set is_backupfitdata          no

#cp ${cp_source} ${cp_destination}

##------------------------------------------------------
## << fitdata (post-amdat) setters >> ##
##------------------------------------------------------
set is_use_FG           yes
set is_applytauFitcut   yes
set is_use_KWWassist    yes
set is_fit_full_alpha   yes
set is_fit_sExp         yes
set is_fit_Arrhenius    yes
set is_fit_tauFit       yes
set is_find_DWF         yes
set is_find_NGP         yes
set is_calc_thermoData  yes
set is_fit_Fs_by_spline no
set is_fit_lnFs         no
set is_use_gammafunc    no
set is_1stmoment_tau    no

set definitionofTA      ArrNor
set fcorr_model         KWW    ## arg: KWW,KWW_pwr,mKWW,mKWW_pwr
set extrp_model         COOP   ## arg: AM,DG,VFT,Mauro,CG,COOP,DEAG,MCT,SOU
set presq_model         VFT    ## arg: AM,DG,VFT,Mauro,CG,COOP,DEAG,MCT,SOU

#set is_normalModes     yes
#set is_qspectrum       yes
#set waveindices        2 98 19
#set logtselect         2.0 2.5 2.85

#set stringtype         stringsRg #strings,stringsRg
#set is_cusstrfolder    yes
#set species            Cu4Ag6
#set speciesName        Cu Ag all
#set speciesType        1 2
#set sigmaMatrix        {2.5,2.7} {2.7,2.9}

##------------------------------------------------------------------------------
##/** RUN PROGRAM **/
##------------------------------------------------------------------------------
## Example Usage: run 'keywords' [args]
##------------------------------------------------------------------------------
## 'simulation'             (generates simulation bash scripts)
## 'analysis'               (generates amdat analysis bash scripts)
## 'fitdata'                (perform post-amdat data anlysis)
##
## 'amdatinp' ['yes','no']  (yes: generate amdat input on the fly)
## 'sub'      ['yes','no']  (yes: auto-submit jobs)
## 'hold'     ['yes','no']  (yes: check for target files and hold automation)
##
## << simulation restart >>
## 'sim_restart' ['regime index'] [-p] ['phase' 'regime index']
## -- 'regime index' = a integer index in [regime_beg,regime_end]
## -- 'phase'        = gen,qch,equ,res,prd
##
## << amdat analysis restart >>
## 'ana_restart' ['regime index']
## -- 'regime index' = a integer index in [regime_beg,regime_end]
##
## NOTE:
## Order of keywords does not matter in program execution, but arguments have
## to come next to the relevant keywords
##------------------------------------------------------------------------------

#run simulation sub no hold yes
#exit
#run simulation sub yes hold yes
#exit
#run analysis amdatinp yes sub yes hold no
#exit
#run simulation analysis amdatinp yes sub yes hold yes sim_restart 1 -p gen 1 -p qch 1 -p equ 1 -p prd 1 ana_restart 0
#exit

#run simulation analysis fitdata amdatinp yes sub yes hold yes sim_restart 0 -p gen 1 -p qch 1 -p equ 1 -p prd 0 ana_restart 1

run simulation analysis fitdata amdatinp yes sub yes hold yes
exit

#run simulation resize zlong1d 3 analysis fitdata amdatinp no sub yes hold yes
#run simulation resize cubic analysis fitdata amdatinp no sub yes hold yes
#run simulation resize analysis fitdata amdatinp no sub yes hold yes

#run simulation
#exit

run simulation analysis
exit

#run fitdata


#run theorytest analysis amdatinp yes

#set is_makeNewAnanlysisFolder no
#set is_backupfitdata          no

#run fitDielectric form NPIC sfreq_range 1E+0 1E+5 dc_free no func HN_loss model COOP
#run fitDielectric form NPIC dc_free no func HN_loss model COOP
#run fitDielectric dc_free no func HN_loss model COOP

#run alglibfit

exit













set tinfo initialize 5

set tinfo regime 0
{1500000,1450000,1400000,1350000,1300000,1275000,1250000,1225000}
{1500000,1450000,1400000,1350000,1300000,1275000,1250000,1225000}

set tinfo regime 1
{1115501,1005999,896497,786995,677493,567991}
{1115234,1005470,895706,785942,676178,566414}

set tinfo regime 2
{525041,482090,439139}
{527197,487979,448761}

set tinfo regime 3
{428001,416861,405721,394581}
{434314,419865,405416}

set tinfo regime 4
{389170,383758,378346,372934}
{397415,389413,381411,373409}

set tinfo regime 5
{368765,364596,360427,356258}
{369227,365046,360865,356684}

exit



define test1 00
define test2 01 02
define test3 03 04 05 06 07 08 09 10

for loopid 0 10

print "${loopid}_${test1}_${test2}_${test3}"

# print "loopid value is ${loopid}"
# print "test1 ${test1} test2 ${test2} test3 ${test3}"
# print "${test1}_${test2}_${test3}"
# print ${test1}
# print ${test2}
# print ${test3}
# print ""
next test1
next test2
next test3

endfor

exit

define cum 00

define cum ${cum} 01 02
define cum ${cum} 03 04 05

print "${cum}"

exit

for add 1 5

define cum ${cum} 0${add}

endfor

for add 1 5

print "cum ${cum}"

endfor

exit


define a 0
define b 0


## NOTE: if takes 0 or 1 for arguments
if ${a} == ${b}

print "a ${a}"
print "b ${b}"

endif

exit

define rbeg 0
define rend 5

print "rbeg ${rbeg}"
print "rend ${rend}"

for regime ${rbeg} ${rend}

 print "regime ${regime}"
# run simulation analysis
# sub no hold no

endfor

exit

for i 0 5
    print "test3 value is ${test5}"
    next test3
endfor

exit





